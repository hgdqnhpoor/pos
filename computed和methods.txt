computed和methods
1.methods中的方法return以后最终可以返回到模板中
2.我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是计算属性是基于他们的依赖进行缓存的。计算属性只有在它的相关依赖发生改变时才会重新求值。这就意味着只要data中的message还没发生改变，多次访问methods中的函数计算属性会立即返回之前的计算结果，而不必再次执行函数
3.computed只支持响应式的变化，data中的message数据变化，计算属性才会返回之前的计算结果
4.相比之下，每当触发重新渲染时，调用方法总会再次执行函数
5.我们为什么需要缓存？假设我们有一个性能开销比较大的计算属性A，它需要遍历一个巨大的数组并做大量的计算。然后我们可能有其他的计算属性依赖于A。如果没有缓存，我们将不可避免的多次执行A的getter！如果你不希望有缓存，请用方法来替代
6.使用watch选项允许我们执行异步操作（访问一个API),限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。